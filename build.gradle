plugins {
  id "net.ltgt.apt-eclipse" version "0.21"
  id "com.github.johnrengelman.shadow" version "5.0.0"
  id "application"
  id "checkstyle"
  id "com.github.spotbugs" version "3.0.0"
  id "pmd"
  id "org.flywaydb.flyway" version "6.1.4"
}

version "0.1"
group "fi.vamk"

repositories {
  mavenCentral()
  maven { url "https://jcenter.bintray.com" }
}

configurations {
  // for dependencies that are needed for development only
  developmentOnly
}

dependencies {
  compileOnly "org.projectlombok:lombok:1.18.10"
  annotationProcessor "org.projectlombok:lombok:1.18.10"

  annotationProcessor "io.micronaut.configuration:micronaut-openapi:1.3.3"
  compile "io.swagger.core.v3:swagger-annotations"

  annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
  annotationProcessor "io.micronaut:micronaut-inject-java"
  annotationProcessor "io.micronaut:micronaut-validation"
  implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  implementation "io.micronaut:micronaut-inject"
  implementation "io.micronaut:micronaut-validation"
  implementation "io.micronaut:micronaut-runtime"
  implementation "io.micronaut:micronaut-http-server-netty"
  implementation "io.micronaut:micronaut-http-client"
  runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
  testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
  testAnnotationProcessor "io.micronaut:micronaut-inject-java"
  testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")

  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testImplementation "io.micronaut.test:micronaut-test-junit5"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

  annotationProcessor "io.micronaut.data:micronaut-data-processor:1.0.0.M5"
  compile "io.micronaut.data:micronaut-data-hibernate-jpa:1.0.0.M5"
  runtime "io.micronaut.configuration:micronaut-jdbc-tomcat"
  compile "mysql:mysql-connector-java:8.0.18"
}

flyway {
  url = "jdbc:mysql://localhost:3308/beceps"
  user = "root"
  password = "zaq1@WSX"
}

checkstyle {
  toolVersion "8.28"
  configFile file("${rootDir}/tools/lint/checkstyle.xml")
}

spotbugs {
  toolVersion "4.0.0-beta4"
  excludeFilter file("${rootDir}/tools/lint/spotbugs.xml")
}

pmd {
  toolVersion "6.20.0"
  ruleSets = []
  ruleSetFiles files("${rootDir}/tools/lint/pmd.xml")
}

test.classpath += configurations.developmentOnly

mainClassName = "fi.vamk.beceps.Application"
// use JUnit 5 platform
test {
  useJUnitPlatform()
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.compilerArgs.add("-parameters")
  options.fork = true
  options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

shadowJar {
  mergeServiceFiles()
}

checkstyleMain {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

checkstyleTest {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

spotbugsMain {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

spotbugsTest {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

pmdMain {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

pmdTest {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

run.classpath += configurations.developmentOnly
run.jvmArgs("-noverify", "-XX:TieredStopAtLevel=1", "-Dcom.sun.management.jmxremote")
compileJava.options.compilerArgs += "-parameters"
